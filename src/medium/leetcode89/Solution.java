package medium.leetcode89;

import java.util.ArrayList;
import java.util.List;

/**
 * 格雷编码：
 * 格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。
 * 给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。
 *
 * 示例 1:
 * 输入: 2
 * 输出: [0,1,3,2]
 * 解释:
 * 00 - 0
 * 01 - 1
 * 11 - 3
 * 10 - 2
 * 对于给定的 n，其格雷编码序列并不唯一。
 * 例如，[0,2,3,1] 也是一个有效的格雷编码序列。
 * 00 - 0
 * 10 - 2
 * 11 - 3
 * 01 - 1
 * 示例 2:
 * 输入: 0
 * 输出: [0]
 *
 * 解释: 我们定义格雷编码序列必须以 0 开头。
 *      给定编码总位数为 n 的格雷编码序列，其长度为 2^n。当 n = 0 时，长度为 2^0 = 1。
 *      因此，当 n = 0 时，其格雷编码序列为 [0]。
 */
public class Solution {

    /**
     * 格雷码生成:
     * 格雷码生成规则
     * 如 n = 3:
     * G(0) = 000,
     * G(1) = 1 ^ 0 = 001 ^ 000 = 001
     * G(2) = 2 ^ 1 = 010 ^ 001 = 011
     * G(3) = 3 ^ 1 = 011 ^ 001 = 010
     * G(4) = 4 ^ 2 = 100 ^ 010 = 110
     * G(5) = 5 ^ 2 = 101 ^ 010 = 111
     * G(6) = 6 ^ 3 = 110 ^ 011 = 101
     * G(7) = 7 ^ 3 = 111 ^ 011 = 100
     * 则G(i) = i ^ (i / 2) 或G(i) = i ^ (i >> 1)
     */
    public List<Integer> grayCode(int n) {
        List<Integer> ret = new ArrayList<>();
        if(n < 0) return ret;
        int count = 1 << n;//共生成格雷码的个数数
        for(int i = 0;i < count; i++){
            ret.add(i ^ (i >> 1));
        }
        return ret;
    }

}
